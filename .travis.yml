sudo: required
dist: trusty
language: cpp
services:
  - docker

git:
  depth: 1

cache:
  directories:
    - $HOME/builder_ccache
    - $HOME/builder_result
    - $HOME/proof-bin

env:
  global:
    - TARGET_NAME=`echo "$TRAVIS_REPO_SLUG" | sed -r 's|(.*/)?(.+)|\2|'`
    - PROOF_VERSION=0.18.7.6
    - PATH=$HOME/.local/bin:$PATH
    - secure: jDtfVAPJtMnrSnEhzcvFKtPKgykFbCq3a4Vg6YbsC3zcyOm7io1Y5LGJRaL8+wYg9enpffSz+nZSbxPmJSrC/gf4tcyDKmyST8wWVYLT5i0FzP7RoI5y9gfazdTenaAZOkKauFa4XY36qhC2YCxqdbnHtxRjO59uu9FoMfUHKwo=
    - secure: guj8ClLTeuhJenL0QDaJ7L8dFIoYMI6f36yk/YtKDyDOXisPhRL6Qlbe6MYRxhglozEqLawrivF4fxazUAeWSRq6dk73Tqpg/pNLWLFlohAgLUI+pHp3b45utwH1ootyub/IVtMfRlgkfCiL9WqZWR4vMcz8+3U/cjDrkwQISpE=

jobs:
  include:
    - &pre-compile
      stage: Pre compilation
      name: Proof installation (non-release)
      if: type != pull_request AND tag IS blank AND branch != master
      before_install:
        - pip install --user awscli
      script:
        - cd $HOME
        - aws s3 cp s3://proof.travis.builds/$TRAVIS_BRANCH/proof-bin-debian9.tar.gz proof-bin.tar.gz ||
          aws s3 cp s3://proof.travis.builds/develop/proof-bin-debian9.tar.gz proof-bin.tar.gz || travis_terminate 1
        - rm -rf proof-bin && tar -xzf proof-bin.tar.gz
    - <<: *pre-compile
      name: Proof installation (release)
      if: type != pull_request AND (tag IS present OR branch = master)
      before_install:
        - pip install --user awscli
      script:
        - cd $HOME
        - aws s3 cp s3://proof.travis.builds/__releases/proof/$PROOF_VERSION/proof-bin-debian9.tar.gz proof-bin.tar.gz || travis_terminate 1
        - rm -rf proof-bin && tar -xzf proof-bin.tar.gz
    - &compile
      stage: compilation and static checks
      name: Compilation (with ccache)
      before_script:
        - docker pull dkormalev/proof-builder-ccache:latest
        - mkdir $HOME/builder_logs
        - rm -rf $HOME/builder_result && mkdir $HOME/builder_result
        - docker run -id --name builder
            -v $(pwd):/sandbox/target_src -v $HOME/proof-bin:/sandbox/proof-bin -v $HOME/builder_logs:/sandbox/logs
            -v $HOME/builder_ccache:/root/.ccache -v $HOME/builder_result:/sandbox/build
            -e "PROOF_PATH=/sandbox/proof-bin" -e "QMAKEFEATURES=/sandbox/proof-bin/features"
            -w="/sandbox"
            dkormalev/proof-builder-ccache tail -f /dev/null
        - docker ps
      script:
        - echo "Running qmake..." && echo -en 'travis_fold:start:build.qmake\\r'
        - docker exec -t builder bash -c "exec 3>&1; set -o pipefail; rm -rf /sandbox/logs/*; cd build;
              qmake -r 'QMAKE_CXXFLAGS += -ferror-limit=0 -fcolor-diagnostics' PREFIX="/sandbox/package-$TARGET_NAME"
                ../target_src/$TARGET_NAME.pro 2>&1 1>&3 | (tee /sandbox/logs/errors.log 1>&2)" || travis_terminate 1
        - echo -en 'travis_fold:end:build.qmake\\r' && $HOME/proof-bin/dev-tools/travis/check_for_errorslog.sh qmake || true
        - echo "Compiling..." && echo -en 'travis_fold:start:build.compile\\r'
        - docker exec -t builder bash -c "exec 3>&1; set -o pipefail; rm -rf /sandbox/logs/*; cd build;
              make -j4 2>&1 1>&3 | (tee /sandbox/logs/errors.log 1>&2)" || travis_terminate 1
        - echo -en 'travis_fold:end:build.compile\\r' && $HOME/proof-bin/dev-tools/travis/check_for_errorslog.sh compilation || true
        - echo "Make install..." && echo -en 'travis_fold:start:build.install\\r'
        - docker exec -t builder bash -c "mkdir -p /sandbox/package-$TARGET_NAME/opt/Opensoft/proof/bin
              && cd /sandbox/build && make install" || travis_terminate 1
        - docker exec -t builder bash -c "tar -czf package-$TARGET_NAME.tar.gz package-$TARGET_NAME && mv package-$TARGET_NAME.tar.gz build/" || travis_terminate 1
        - echo -en 'travis_fold:end:build.install\\r'
    - <<: *compile
      name: Code style check with clang-format
      env: DUMMY=clang-format #We don't need our default cache here
      before_install:
        - git config --global color.ui always
      before_script:
        - docker pull dkormalev/proof-check-codestyle:latest
        - docker run -id --name codestyle-check -v $(pwd):/sandbox/target_src -w="/sandbox/target_src" dkormalev/proof-check-codestyle tail -f /dev/null
        - docker ps
      script:
        - docker exec -t codestyle-check bash -c "find -iname '*.h' -o -iname '*.cpp' | grep -v 3rdparty | grep -v gtest | xargs clang-format -i" || travis_terminate 1
        - git diff
        - travis_terminate `git diff | wc -l`
    - <<: *compile
      name: Static code analysis with clazy
      before_script:
        - docker pull dkormalev/proof-builder-clazy:latest
        - mkdir $HOME/builder_logs
        - docker run -id --name clazy
            -v $(pwd):/sandbox/target_src -v $HOME/proof-bin:/sandbox/proof-bin -v $HOME/builder_logs:/sandbox/logs
            -e "PROOF_PATH=/sandbox/proof-bin" -e "QMAKEFEATURES=/sandbox/proof-bin/features"
            -w="/sandbox"
            dkormalev/proof-builder-clazy tail -f /dev/null
        - docker ps
      script:
        - echo "Running qmake..." && echo -en 'travis_fold:start:build.qmake\\r'
        - docker exec -t clazy bash -c "exec 3>&1; set -o pipefail; rm -rf /sandbox/logs/*; mkdir build && cd build;
              qmake -r 'QMAKE_CXXFLAGS += -ferror-limit=0 -fcolor-diagnostics'
                'QMAKE_CXXFLAGS += -Xclang -plugin-arg-clang-lazy'
                'QMAKE_CXXFLAGS += -Xclang level3,container-inside-loop,inefficient-qlist,qhash-with-char-pointer-key,qstring-varargs,tr-non-literal,unneeded-cast,no-non-pod-global-static,no-ctor-missing-parent-argument,no-detaching-member,no-qstring-allocations'
                'QMAKE_CXXFLAGS += -isystem /opt/Opensoft/Qt/include'
                ../target_src/$TARGET_NAME.pro 2>&1 1>&3 | (tee /sandbox/logs/errors.log 1>&2)" || travis_terminate 1
        - echo -en 'travis_fold:end:build.qmake\\r' && $HOME/proof-bin/dev-tools/travis/check_for_errorslog.sh qmake || true
        - echo "Compiling..." && echo -en 'travis_fold:start:build.compile\\r'
        - docker exec -t clazy bash -c "exec 3>&1; set -o pipefail; rm -rf /sandbox/logs/*; cd build;
              make -j4 2>&1 1>&3 | (tee /sandbox/logs/errors.log 1>&2)"
        - echo -en 'travis_fold:end:build.compile\\r' && $HOME/proof-bin/dev-tools/travis/check_for_errorslog.sh compilation || travis_terminate 1
    - &post-compile
      stage: Post compilation
      name: Debian package upload to S3 (non-release)
      if: type != pull_request AND tag IS blank AND branch != master
      before_install:
        - pip install --user awscli
      before_script:
        - docker pull dkormalev/proof-builder-base:latest
        - cp -R $HOME/builder_result $HOME/full_build
        - docker run -id --name builder
            -v $(pwd):/sandbox/target_src -v $HOME/full_build:/sandbox/build -v $HOME/proof-bin:/opt/Opensoft/proof
            -e "BUILD_ROOT=/sandbox/build" -e "PACKAGE_ROOT=/sandbox/package-$TARGET_NAME" -e "SKIP_BUILD_FOR_DEB_PACKAGE=true"
            -e "PROOF_PATH=/opt/Opensoft/proof" -e "QMAKEFEATURES=/opt/Opensoft/proof/features"
            -w="/sandbox"
            dkormalev/proof-builder-base tail -f /dev/null
        - docker ps
      script:
        - export APP_VERSION="$(grep -e 'VERSION\ =' $TARGET_NAME.pro | sed 's/^VERSION\ =\ \(.*\)/\1/')"
        - echo "Creating deb package..." && echo -en 'travis_fold:start:build.deb\\r'
        - docker exec -t builder bash -c "mv build/package-$TARGET_NAME.tar.gz ./ && tar -xzf package-$TARGET_NAME.tar.gz" || travis_terminate 1
        - docker exec -t builder bash -c "/opt/Opensoft/proof/deploy/deb/build-deb-package -f /sandbox/target_src/Manifest /sandbox/target_src" || travis_terminate 1
        - echo -en 'travis_fold:end:build.deb\\r'
        - $HOME/proof-bin/dev-tools/travis/s3_upload.sh $TARGET_NAME-$APP_VERSION.deb $TRAVIS_BRANCH $TARGET_NAME-$APP_VERSION-$TRAVIS_BRANCH.deb
    - <<: *post-compile
      name: Debian package upload to S3 (release)
      if: type != pull_request AND tag IS present
      before_install:
        - pip install --user awscli
      before_script:
        - docker pull dkormalev/proof-builder-base:latest
        - cp -R $HOME/builder_result $HOME/full_build
        - docker run -id --name builder
            -v $(pwd):/sandbox/target_src -v $HOME/full_build:/sandbox/build -v $HOME/proof-bin:/opt/Opensoft/proof
            -e "BUILD_ROOT=/sandbox/build" -e "PACKAGE_ROOT=/sandbox/package-$TARGET_NAME" -e "SKIP_BUILD_FOR_DEB_PACKAGE=true"
            -e "PROOF_PATH=/opt/Opensoft/proof" -e "QMAKEFEATURES=/opt/Opensoft/proof/features"
            -w="/sandbox"
            dkormalev/proof-builder-base tail -f /dev/null
        - docker ps
      script:
        - export APP_VERSION="$(grep -e 'VERSION\ =' $TARGET_NAME.pro | sed 's/^VERSION\ =\ \(.*\)/\1/')"
        - echo "Creating deb package..." && echo -en 'travis_fold:start:build.deb\\r'
        - docker exec -t builder bash -c "mv build/package-$TARGET_NAME.tar.gz ./ && tar -xzf package-$TARGET_NAME.tar.gz" || travis_terminate 1
        - docker exec -t builder bash -c "/opt/Opensoft/proof/deploy/deb/build-deb-package -f /sandbox/target_src/Manifest /sandbox/target_src" || travis_terminate 1
        - echo -en 'travis_fold:end:build.deb\\r'
        - $HOME/proof-bin/dev-tools/travis/s3_upload.sh $TARGET_NAME-$APP_VERSION.deb __releases/proof $TARGET_NAME-$APP_VERSION.deb

